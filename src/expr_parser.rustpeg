use crate::sheet::Expr;
use crate::sheet::Binop;

spaced<X> = [ ]* X [ ]*

pub expr -> Expr = [ ]* x:expr1 [ ]* { x }

expr1 -> Expr = #infix<atom> {
  #L x spaced<"+"> y { Expr::binop(Binop::Add, x, y) }
     x spaced<"-"> y { Expr::binop(Binop::Sub, x, y) }
  #L x spaced<"*"> y { Expr::binop(Binop::Mul, x, y) }
}

atom -> Expr
  = "(" x:expr ")" { x }
  / n:$([0-9]+) { Expr::Int(n.parse().unwrap()) }
  / x:$([A-Za-z][0-9]+) { Expr::Var(x.to_uppercase().parse().unwrap()) }
